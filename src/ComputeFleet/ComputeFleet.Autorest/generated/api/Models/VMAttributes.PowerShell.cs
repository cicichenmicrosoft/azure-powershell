// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/powershell@4.0.722)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Models
{
    using Sample.API.Runtime.PowerShell;

    /// <summary>
    /// VMAttributes that will be used to filter VMSizes which will be used to build Fleet.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(VMAttributesTypeConverter))]
    public partial class VMAttributes
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Sample.API.Models.VMAttributes"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>an instance of <see cref="Sample.API.Models.IVMAttributes" />.</returns>
        public static Sample.API.Models.IVMAttributes DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new VMAttributes(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Sample.API.Models.VMAttributes"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>an instance of <see cref="Sample.API.Models.IVMAttributes" />.</returns>
        public static Sample.API.Models.IVMAttributes DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new VMAttributes(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="VMAttributes" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="VMAttributes" /> model class.</returns>
        public static Sample.API.Models.IVMAttributes FromJsonString(string jsonText) => FromJson(Sample.API.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Sample.API.Runtime.SerializationMode.IncludeAll)?.ToString();

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Sample.API.Models.VMAttributes"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal VMAttributes(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("VCpuCount"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).VCpuCount = (Sample.API.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("VCpuCount",((Sample.API.Models.IVMAttributesInternal)this).VCpuCount, Sample.API.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("MemoryInGiB"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiB = (Sample.API.Models.IVMAttributeMinMaxDouble) content.GetValueForProperty("MemoryInGiB",((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiB, Sample.API.Models.VMAttributeMinMaxDoubleTypeConverter.ConvertFrom);
            }
            if (content.Contains("MemoryInGiBPerVcpu"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBPerVcpu = (Sample.API.Models.IVMAttributeMinMaxDouble) content.GetValueForProperty("MemoryInGiBPerVcpu",((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBPerVcpu, Sample.API.Models.VMAttributeMinMaxDoubleTypeConverter.ConvertFrom);
            }
            if (content.Contains("LocalStorageInGiB"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).LocalStorageInGiB = (Sample.API.Models.IVMAttributeMinMaxDouble) content.GetValueForProperty("LocalStorageInGiB",((Sample.API.Models.IVMAttributesInternal)this).LocalStorageInGiB, Sample.API.Models.VMAttributeMinMaxDoubleTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataDiskCount"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).DataDiskCount = (Sample.API.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("DataDiskCount",((Sample.API.Models.IVMAttributesInternal)this).DataDiskCount, Sample.API.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkInterfaceCount"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).NetworkInterfaceCount = (Sample.API.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("NetworkInterfaceCount",((Sample.API.Models.IVMAttributesInternal)this).NetworkInterfaceCount, Sample.API.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkBandwidthInMbps"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).NetworkBandwidthInMbps = (Sample.API.Models.IVMAttributeMinMaxDouble) content.GetValueForProperty("NetworkBandwidthInMbps",((Sample.API.Models.IVMAttributesInternal)this).NetworkBandwidthInMbps, Sample.API.Models.VMAttributeMinMaxDoubleTypeConverter.ConvertFrom);
            }
            if (content.Contains("RdmaNetworkInterfaceCount"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).RdmaNetworkInterfaceCount = (Sample.API.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("RdmaNetworkInterfaceCount",((Sample.API.Models.IVMAttributesInternal)this).RdmaNetworkInterfaceCount, Sample.API.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("AcceleratorCount"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).AcceleratorCount = (Sample.API.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("AcceleratorCount",((Sample.API.Models.IVMAttributesInternal)this).AcceleratorCount, Sample.API.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("LocalStorageSupport"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).LocalStorageSupport = (string) content.GetValueForProperty("LocalStorageSupport",((Sample.API.Models.IVMAttributesInternal)this).LocalStorageSupport, global::System.Convert.ToString);
            }
            if (content.Contains("LocalStorageDiskTypes"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).LocalStorageDiskTypes = (System.Collections.Generic.List<string>) content.GetValueForProperty("LocalStorageDiskTypes",((Sample.API.Models.IVMAttributesInternal)this).LocalStorageDiskTypes, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("RdmaSupport"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).RdmaSupport = (string) content.GetValueForProperty("RdmaSupport",((Sample.API.Models.IVMAttributesInternal)this).RdmaSupport, global::System.Convert.ToString);
            }
            if (content.Contains("AcceleratorSupport"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).AcceleratorSupport = (string) content.GetValueForProperty("AcceleratorSupport",((Sample.API.Models.IVMAttributesInternal)this).AcceleratorSupport, global::System.Convert.ToString);
            }
            if (content.Contains("AcceleratorManufacturers"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).AcceleratorManufacturers = (System.Collections.Generic.List<string>) content.GetValueForProperty("AcceleratorManufacturers",((Sample.API.Models.IVMAttributesInternal)this).AcceleratorManufacturers, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AcceleratorTypes"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).AcceleratorTypes = (System.Collections.Generic.List<string>) content.GetValueForProperty("AcceleratorTypes",((Sample.API.Models.IVMAttributesInternal)this).AcceleratorTypes, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VMCategories"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).VMCategories = (System.Collections.Generic.List<string>) content.GetValueForProperty("VMCategories",((Sample.API.Models.IVMAttributesInternal)this).VMCategories, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ArchitectureTypes"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).ArchitectureTypes = (System.Collections.Generic.List<string>) content.GetValueForProperty("ArchitectureTypes",((Sample.API.Models.IVMAttributesInternal)this).ArchitectureTypes, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CpuManufacturers"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).CpuManufacturers = (System.Collections.Generic.List<string>) content.GetValueForProperty("CpuManufacturers",((Sample.API.Models.IVMAttributesInternal)this).CpuManufacturers, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BurstableSupport"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).BurstableSupport = (string) content.GetValueForProperty("BurstableSupport",((Sample.API.Models.IVMAttributesInternal)this).BurstableSupport, global::System.Convert.ToString);
            }
            if (content.Contains("ExcludedVMSizes"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).ExcludedVMSizes = (System.Collections.Generic.List<string>) content.GetValueForProperty("ExcludedVMSizes",((Sample.API.Models.IVMAttributesInternal)this).ExcludedVMSizes, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VCpuCountMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).VCpuCountMin = (int?) content.GetValueForProperty("VCpuCountMin",((Sample.API.Models.IVMAttributesInternal)this).VCpuCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VCpuCountMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).VCpuCountMax = (int?) content.GetValueForProperty("VCpuCountMax",((Sample.API.Models.IVMAttributesInternal)this).VCpuCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MemoryInGiBMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBMin = (double?) content.GetValueForProperty("MemoryInGiBMin",((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBMin, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MemoryInGiBMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBMax = (double?) content.GetValueForProperty("MemoryInGiBMax",((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBMax, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MemoryInGiBPerVcpuMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBPerVcpuMin = (double?) content.GetValueForProperty("MemoryInGiBPerVcpuMin",((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBPerVcpuMin, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MemoryInGiBPerVcpuMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBPerVcpuMax = (double?) content.GetValueForProperty("MemoryInGiBPerVcpuMax",((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBPerVcpuMax, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("LocalStorageInGiBMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).LocalStorageInGiBMin = (double?) content.GetValueForProperty("LocalStorageInGiBMin",((Sample.API.Models.IVMAttributesInternal)this).LocalStorageInGiBMin, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("LocalStorageInGiBMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).LocalStorageInGiBMax = (double?) content.GetValueForProperty("LocalStorageInGiBMax",((Sample.API.Models.IVMAttributesInternal)this).LocalStorageInGiBMax, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("DataDiskCountMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).DataDiskCountMin = (int?) content.GetValueForProperty("DataDiskCountMin",((Sample.API.Models.IVMAttributesInternal)this).DataDiskCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DataDiskCountMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).DataDiskCountMax = (int?) content.GetValueForProperty("DataDiskCountMax",((Sample.API.Models.IVMAttributesInternal)this).DataDiskCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkInterfaceCountMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).NetworkInterfaceCountMin = (int?) content.GetValueForProperty("NetworkInterfaceCountMin",((Sample.API.Models.IVMAttributesInternal)this).NetworkInterfaceCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkInterfaceCountMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).NetworkInterfaceCountMax = (int?) content.GetValueForProperty("NetworkInterfaceCountMax",((Sample.API.Models.IVMAttributesInternal)this).NetworkInterfaceCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkBandwidthInMbpsMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).NetworkBandwidthInMbpsMin = (double?) content.GetValueForProperty("NetworkBandwidthInMbpsMin",((Sample.API.Models.IVMAttributesInternal)this).NetworkBandwidthInMbpsMin, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("NetworkBandwidthInMbpsMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).NetworkBandwidthInMbpsMax = (double?) content.GetValueForProperty("NetworkBandwidthInMbpsMax",((Sample.API.Models.IVMAttributesInternal)this).NetworkBandwidthInMbpsMax, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("RdmaNetworkInterfaceCountMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).RdmaNetworkInterfaceCountMin = (int?) content.GetValueForProperty("RdmaNetworkInterfaceCountMin",((Sample.API.Models.IVMAttributesInternal)this).RdmaNetworkInterfaceCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RdmaNetworkInterfaceCountMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).RdmaNetworkInterfaceCountMax = (int?) content.GetValueForProperty("RdmaNetworkInterfaceCountMax",((Sample.API.Models.IVMAttributesInternal)this).RdmaNetworkInterfaceCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AcceleratorCountMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).AcceleratorCountMin = (int?) content.GetValueForProperty("AcceleratorCountMin",((Sample.API.Models.IVMAttributesInternal)this).AcceleratorCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AcceleratorCountMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).AcceleratorCountMax = (int?) content.GetValueForProperty("AcceleratorCountMax",((Sample.API.Models.IVMAttributesInternal)this).AcceleratorCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Sample.API.Models.VMAttributes"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal VMAttributes(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("VCpuCount"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).VCpuCount = (Sample.API.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("VCpuCount",((Sample.API.Models.IVMAttributesInternal)this).VCpuCount, Sample.API.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("MemoryInGiB"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiB = (Sample.API.Models.IVMAttributeMinMaxDouble) content.GetValueForProperty("MemoryInGiB",((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiB, Sample.API.Models.VMAttributeMinMaxDoubleTypeConverter.ConvertFrom);
            }
            if (content.Contains("MemoryInGiBPerVcpu"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBPerVcpu = (Sample.API.Models.IVMAttributeMinMaxDouble) content.GetValueForProperty("MemoryInGiBPerVcpu",((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBPerVcpu, Sample.API.Models.VMAttributeMinMaxDoubleTypeConverter.ConvertFrom);
            }
            if (content.Contains("LocalStorageInGiB"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).LocalStorageInGiB = (Sample.API.Models.IVMAttributeMinMaxDouble) content.GetValueForProperty("LocalStorageInGiB",((Sample.API.Models.IVMAttributesInternal)this).LocalStorageInGiB, Sample.API.Models.VMAttributeMinMaxDoubleTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataDiskCount"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).DataDiskCount = (Sample.API.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("DataDiskCount",((Sample.API.Models.IVMAttributesInternal)this).DataDiskCount, Sample.API.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkInterfaceCount"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).NetworkInterfaceCount = (Sample.API.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("NetworkInterfaceCount",((Sample.API.Models.IVMAttributesInternal)this).NetworkInterfaceCount, Sample.API.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkBandwidthInMbps"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).NetworkBandwidthInMbps = (Sample.API.Models.IVMAttributeMinMaxDouble) content.GetValueForProperty("NetworkBandwidthInMbps",((Sample.API.Models.IVMAttributesInternal)this).NetworkBandwidthInMbps, Sample.API.Models.VMAttributeMinMaxDoubleTypeConverter.ConvertFrom);
            }
            if (content.Contains("RdmaNetworkInterfaceCount"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).RdmaNetworkInterfaceCount = (Sample.API.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("RdmaNetworkInterfaceCount",((Sample.API.Models.IVMAttributesInternal)this).RdmaNetworkInterfaceCount, Sample.API.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("AcceleratorCount"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).AcceleratorCount = (Sample.API.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("AcceleratorCount",((Sample.API.Models.IVMAttributesInternal)this).AcceleratorCount, Sample.API.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("LocalStorageSupport"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).LocalStorageSupport = (string) content.GetValueForProperty("LocalStorageSupport",((Sample.API.Models.IVMAttributesInternal)this).LocalStorageSupport, global::System.Convert.ToString);
            }
            if (content.Contains("LocalStorageDiskTypes"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).LocalStorageDiskTypes = (System.Collections.Generic.List<string>) content.GetValueForProperty("LocalStorageDiskTypes",((Sample.API.Models.IVMAttributesInternal)this).LocalStorageDiskTypes, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("RdmaSupport"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).RdmaSupport = (string) content.GetValueForProperty("RdmaSupport",((Sample.API.Models.IVMAttributesInternal)this).RdmaSupport, global::System.Convert.ToString);
            }
            if (content.Contains("AcceleratorSupport"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).AcceleratorSupport = (string) content.GetValueForProperty("AcceleratorSupport",((Sample.API.Models.IVMAttributesInternal)this).AcceleratorSupport, global::System.Convert.ToString);
            }
            if (content.Contains("AcceleratorManufacturers"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).AcceleratorManufacturers = (System.Collections.Generic.List<string>) content.GetValueForProperty("AcceleratorManufacturers",((Sample.API.Models.IVMAttributesInternal)this).AcceleratorManufacturers, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AcceleratorTypes"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).AcceleratorTypes = (System.Collections.Generic.List<string>) content.GetValueForProperty("AcceleratorTypes",((Sample.API.Models.IVMAttributesInternal)this).AcceleratorTypes, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VMCategories"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).VMCategories = (System.Collections.Generic.List<string>) content.GetValueForProperty("VMCategories",((Sample.API.Models.IVMAttributesInternal)this).VMCategories, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ArchitectureTypes"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).ArchitectureTypes = (System.Collections.Generic.List<string>) content.GetValueForProperty("ArchitectureTypes",((Sample.API.Models.IVMAttributesInternal)this).ArchitectureTypes, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CpuManufacturers"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).CpuManufacturers = (System.Collections.Generic.List<string>) content.GetValueForProperty("CpuManufacturers",((Sample.API.Models.IVMAttributesInternal)this).CpuManufacturers, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BurstableSupport"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).BurstableSupport = (string) content.GetValueForProperty("BurstableSupport",((Sample.API.Models.IVMAttributesInternal)this).BurstableSupport, global::System.Convert.ToString);
            }
            if (content.Contains("ExcludedVMSizes"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).ExcludedVMSizes = (System.Collections.Generic.List<string>) content.GetValueForProperty("ExcludedVMSizes",((Sample.API.Models.IVMAttributesInternal)this).ExcludedVMSizes, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VCpuCountMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).VCpuCountMin = (int?) content.GetValueForProperty("VCpuCountMin",((Sample.API.Models.IVMAttributesInternal)this).VCpuCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VCpuCountMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).VCpuCountMax = (int?) content.GetValueForProperty("VCpuCountMax",((Sample.API.Models.IVMAttributesInternal)this).VCpuCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MemoryInGiBMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBMin = (double?) content.GetValueForProperty("MemoryInGiBMin",((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBMin, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MemoryInGiBMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBMax = (double?) content.GetValueForProperty("MemoryInGiBMax",((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBMax, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MemoryInGiBPerVcpuMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBPerVcpuMin = (double?) content.GetValueForProperty("MemoryInGiBPerVcpuMin",((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBPerVcpuMin, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MemoryInGiBPerVcpuMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBPerVcpuMax = (double?) content.GetValueForProperty("MemoryInGiBPerVcpuMax",((Sample.API.Models.IVMAttributesInternal)this).MemoryInGiBPerVcpuMax, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("LocalStorageInGiBMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).LocalStorageInGiBMin = (double?) content.GetValueForProperty("LocalStorageInGiBMin",((Sample.API.Models.IVMAttributesInternal)this).LocalStorageInGiBMin, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("LocalStorageInGiBMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).LocalStorageInGiBMax = (double?) content.GetValueForProperty("LocalStorageInGiBMax",((Sample.API.Models.IVMAttributesInternal)this).LocalStorageInGiBMax, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("DataDiskCountMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).DataDiskCountMin = (int?) content.GetValueForProperty("DataDiskCountMin",((Sample.API.Models.IVMAttributesInternal)this).DataDiskCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DataDiskCountMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).DataDiskCountMax = (int?) content.GetValueForProperty("DataDiskCountMax",((Sample.API.Models.IVMAttributesInternal)this).DataDiskCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkInterfaceCountMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).NetworkInterfaceCountMin = (int?) content.GetValueForProperty("NetworkInterfaceCountMin",((Sample.API.Models.IVMAttributesInternal)this).NetworkInterfaceCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkInterfaceCountMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).NetworkInterfaceCountMax = (int?) content.GetValueForProperty("NetworkInterfaceCountMax",((Sample.API.Models.IVMAttributesInternal)this).NetworkInterfaceCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkBandwidthInMbpsMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).NetworkBandwidthInMbpsMin = (double?) content.GetValueForProperty("NetworkBandwidthInMbpsMin",((Sample.API.Models.IVMAttributesInternal)this).NetworkBandwidthInMbpsMin, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("NetworkBandwidthInMbpsMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).NetworkBandwidthInMbpsMax = (double?) content.GetValueForProperty("NetworkBandwidthInMbpsMax",((Sample.API.Models.IVMAttributesInternal)this).NetworkBandwidthInMbpsMax, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("RdmaNetworkInterfaceCountMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).RdmaNetworkInterfaceCountMin = (int?) content.GetValueForProperty("RdmaNetworkInterfaceCountMin",((Sample.API.Models.IVMAttributesInternal)this).RdmaNetworkInterfaceCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RdmaNetworkInterfaceCountMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).RdmaNetworkInterfaceCountMax = (int?) content.GetValueForProperty("RdmaNetworkInterfaceCountMax",((Sample.API.Models.IVMAttributesInternal)this).RdmaNetworkInterfaceCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AcceleratorCountMin"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).AcceleratorCountMin = (int?) content.GetValueForProperty("AcceleratorCountMin",((Sample.API.Models.IVMAttributesInternal)this).AcceleratorCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AcceleratorCountMax"))
            {
                ((Sample.API.Models.IVMAttributesInternal)this).AcceleratorCountMax = (int?) content.GetValueForProperty("AcceleratorCountMax",((Sample.API.Models.IVMAttributesInternal)this).AcceleratorCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializePSObject(content);
        }
    }
    /// VMAttributes that will be used to filter VMSizes which will be used to build Fleet.
    [System.ComponentModel.TypeConverter(typeof(VMAttributesTypeConverter))]
    public partial interface IVMAttributes

    {

    }
}