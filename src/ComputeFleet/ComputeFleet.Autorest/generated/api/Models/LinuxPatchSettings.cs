// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/powershell@4.0.722)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Models
{
    using static Sample.API.Runtime.Extensions;

    /// <summary>Specifies settings related to VM Guest Patching on Linux.</summary>
    public partial class LinuxPatchSettings :
        Sample.API.Models.ILinuxPatchSettings,
        Sample.API.Models.ILinuxPatchSettingsInternal
    {

        /// <summary>Backing field for <see cref="AssessmentMode" /> property.</summary>
        private string _assessmentMode;

        /// <summary>
        /// Specifies the mode of VM Guest Patch Assessment for the IaaS virtual
        /// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
        /// control the timing of patch assessments on a virtual machine. <br /><br />
        /// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
        /// The property provisionVMAgent must be true.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string AssessmentMode { get => this._assessmentMode; set => this._assessmentMode = value; }

        /// <summary>Enables customer to schedule patching without accidental upgrades</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public bool? AutomaticByPlatformSettingBypassPlatformSafetyChecksOnUserSchedule { get => ((Sample.API.Models.ILinuxVMGuestPatchAutomaticByPlatformSettingsInternal)AutomaticByPlatformSettings).BypassPlatformSafetyChecksOnUserSchedule; set => ((Sample.API.Models.ILinuxVMGuestPatchAutomaticByPlatformSettingsInternal)AutomaticByPlatformSettings).BypassPlatformSafetyChecksOnUserSchedule = value ?? default(bool); }

        /// <summary>
        /// Specifies the reboot setting for all AutomaticByPlatform patch installation
        /// operations.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string AutomaticByPlatformSettingRebootSetting { get => ((Sample.API.Models.ILinuxVMGuestPatchAutomaticByPlatformSettingsInternal)AutomaticByPlatformSettings).RebootSetting; set => ((Sample.API.Models.ILinuxVMGuestPatchAutomaticByPlatformSettingsInternal)AutomaticByPlatformSettings).RebootSetting = value ?? null; }

        /// <summary>Backing field for <see cref="AutomaticByPlatformSettings" /> property.</summary>
        private Sample.API.Models.ILinuxVMGuestPatchAutomaticByPlatformSettings _automaticByPlatformSettings;

        /// <summary>
        /// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
        /// Patching on Linux.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        internal Sample.API.Models.ILinuxVMGuestPatchAutomaticByPlatformSettings AutomaticByPlatformSettings { get => (this._automaticByPlatformSettings = this._automaticByPlatformSettings ?? new Sample.API.Models.LinuxVMGuestPatchAutomaticByPlatformSettings()); set => this._automaticByPlatformSettings = value; }

        /// <summary>Backing field for <see cref="PatchMode" /> property.</summary>
        private string _patchMode;

        /// <summary>
        /// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
        /// machines associated to virtual machine scale set with OrchestrationMode as
        /// Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The
        /// virtual machine's default patching configuration is used. <br /><br />
        /// **AutomaticByPlatform** - The virtual machine will be automatically updated by
        /// the platform. The property provisionVMAgent must be true
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string PatchMode { get => this._patchMode; set => this._patchMode = value; }

        /// <summary>Internal Acessors for AutomaticByPlatformSettings</summary>
        Sample.API.Models.ILinuxVMGuestPatchAutomaticByPlatformSettings Sample.API.Models.ILinuxPatchSettingsInternal.AutomaticByPlatformSettings { get => (this._automaticByPlatformSettings = this._automaticByPlatformSettings ?? new Sample.API.Models.LinuxVMGuestPatchAutomaticByPlatformSettings()); set { {_automaticByPlatformSettings = value;} } }

        /// <summary>Creates an new <see cref="LinuxPatchSettings" /> instance.</summary>
        public LinuxPatchSettings()
        {

        }
    }
    /// Specifies settings related to VM Guest Patching on Linux.
    public partial interface ILinuxPatchSettings :
        Sample.API.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies the mode of VM Guest Patch Assessment for the IaaS virtual
        /// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
        /// control the timing of patch assessments on a virtual machine. <br /><br />
        /// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
        /// The property provisionVMAgent must be true.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the mode of VM Guest Patch Assessment for the IaaS virtual
        machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
        control the timing of patch assessments on a virtual machine. <br /><br />
        **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
        The property provisionVMAgent must be true.",
        SerializedName = @"assessmentMode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("ImageDefault", "AutomaticByPlatform")]
        string AssessmentMode { get; set; }
        /// <summary>Enables customer to schedule patching without accidental upgrades</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Enables customer to schedule patching without accidental upgrades",
        SerializedName = @"bypassPlatformSafetyChecksOnUserSchedule",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutomaticByPlatformSettingBypassPlatformSafetyChecksOnUserSchedule { get; set; }
        /// <summary>
        /// Specifies the reboot setting for all AutomaticByPlatform patch installation
        /// operations.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the reboot setting for all AutomaticByPlatform patch installation
        operations.",
        SerializedName = @"rebootSetting",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Unknown", "IfRequired", "Never", "Always")]
        string AutomaticByPlatformSettingRebootSetting { get; set; }
        /// <summary>
        /// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
        /// machines associated to virtual machine scale set with OrchestrationMode as
        /// Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The
        /// virtual machine's default patching configuration is used. <br /><br />
        /// **AutomaticByPlatform** - The virtual machine will be automatically updated by
        /// the platform. The property provisionVMAgent must be true
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
        machines associated to virtual machine scale set with OrchestrationMode as
        Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The
        virtual machine's default patching configuration is used. <br /><br />
        **AutomaticByPlatform** - The virtual machine will be automatically updated by
        the platform. The property provisionVMAgent must be true",
        SerializedName = @"patchMode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("ImageDefault", "AutomaticByPlatform")]
        string PatchMode { get; set; }

    }
    /// Specifies settings related to VM Guest Patching on Linux.
    internal partial interface ILinuxPatchSettingsInternal

    {
        /// <summary>
        /// Specifies the mode of VM Guest Patch Assessment for the IaaS virtual
        /// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
        /// control the timing of patch assessments on a virtual machine. <br /><br />
        /// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
        /// The property provisionVMAgent must be true.
        /// </summary>
        [global::Sample.API.PSArgumentCompleterAttribute("ImageDefault", "AutomaticByPlatform")]
        string AssessmentMode { get; set; }
        /// <summary>Enables customer to schedule patching without accidental upgrades</summary>
        bool? AutomaticByPlatformSettingBypassPlatformSafetyChecksOnUserSchedule { get; set; }
        /// <summary>
        /// Specifies the reboot setting for all AutomaticByPlatform patch installation
        /// operations.
        /// </summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Unknown", "IfRequired", "Never", "Always")]
        string AutomaticByPlatformSettingRebootSetting { get; set; }
        /// <summary>
        /// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
        /// Patching on Linux.
        /// </summary>
        Sample.API.Models.ILinuxVMGuestPatchAutomaticByPlatformSettings AutomaticByPlatformSettings { get; set; }
        /// <summary>
        /// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
        /// machines associated to virtual machine scale set with OrchestrationMode as
        /// Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The
        /// virtual machine's default patching configuration is used. <br /><br />
        /// **AutomaticByPlatform** - The virtual machine will be automatically updated by
        /// the platform. The property provisionVMAgent must be true
        /// </summary>
        [global::Sample.API.PSArgumentCompleterAttribute("ImageDefault", "AutomaticByPlatform")]
        string PatchMode { get; set; }

    }
}