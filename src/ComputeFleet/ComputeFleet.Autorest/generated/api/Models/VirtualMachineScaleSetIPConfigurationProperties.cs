// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/powershell@4.0.722)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Models
{
    using static Sample.API.Runtime.Extensions;

    /// <summary>
    /// Describes a virtual machine scale set network profile's IP configuration
    /// properties.
    /// </summary>
    public partial class VirtualMachineScaleSetIPConfigurationProperties :
        Sample.API.Models.IVirtualMachineScaleSetIPConfigurationProperties,
        Sample.API.Models.IVirtualMachineScaleSetIPConfigurationPropertiesInternal
    {

        /// <summary>
        /// Backing field for <see cref="ApplicationGatewayBackendAddressPools" /> property.
        /// </summary>
        private System.Collections.Generic.List<Sample.API.Models.ISubResource> _applicationGatewayBackendAddressPools;

        /// <summary>
        /// Specifies an array of references to backend address pools of application
        /// gateways. A scale set can reference backend address pools of multiple
        /// application gateways. Multiple scale sets cannot use the same application
        /// gateway.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Sample.API.Models.ISubResource> ApplicationGatewayBackendAddressPools { get => this._applicationGatewayBackendAddressPools; set => this._applicationGatewayBackendAddressPools = value; }

        /// <summary>Backing field for <see cref="ApplicationSecurityGroups" /> property.</summary>
        private System.Collections.Generic.List<Sample.API.Models.ISubResource> _applicationSecurityGroups;

        /// <summary>Specifies an array of references to application security group.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Sample.API.Models.ISubResource> ApplicationSecurityGroups { get => this._applicationSecurityGroups; set => this._applicationSecurityGroups = value; }

        /// <summary>Specify what happens to the public IP when the VM is deleted</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string DeleteOption { get => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DeleteOption; set => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DeleteOption = value ?? null; }

        /// <summary>
        /// The Domain name label.The concatenation of the domain name label and vm index
        /// will be the domain name labels of the PublicIPAddress resources that will be
        /// created
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string DnsSettingDomainNameLabel { get => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DnsSettingDomainNameLabel; set => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DnsSettingDomainNameLabel = value ?? null; }

        /// <summary>
        /// The Domain name label scope.The concatenation of the hashed domain name label
        /// that generated according to the policy from domain name label scope and vm
        /// index will be the domain name labels of the PublicIPAddress resources that will
        /// be created
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string DnsSettingDomainNameLabelScope { get => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DnsSettingDomainNameLabelScope; set => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DnsSettingDomainNameLabelScope = value ?? null; }

        /// <summary>The list of IP tags associated with the public IP address.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Sample.API.Models.IVirtualMachineScaleSetIPTag> IPTags { get => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).IPTags; set => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).IPTags = value ?? null /* arrayOf */; }

        /// <summary>The idle timeout of the public IP address.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? IdleTimeoutInMinutes { get => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).IdleTimeoutInMinutes; set => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).IdleTimeoutInMinutes = value ?? default(int); }

        /// <summary>Backing field for <see cref="LoadBalancerBackendAddressPools" /> property.</summary>
        private System.Collections.Generic.List<Sample.API.Models.ISubResource> _loadBalancerBackendAddressPools;

        /// <summary>
        /// Specifies an array of references to backend address pools of load balancers. A
        /// scale set can reference backend address pools of one public and one internal
        /// load balancer. Multiple scale sets cannot use the same basic sku load balancer.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Sample.API.Models.ISubResource> LoadBalancerBackendAddressPools { get => this._loadBalancerBackendAddressPools; set => this._loadBalancerBackendAddressPools = value; }

        /// <summary>Backing field for <see cref="LoadBalancerInboundNatPools" /> property.</summary>
        private System.Collections.Generic.List<Sample.API.Models.ISubResource> _loadBalancerInboundNatPools;

        /// <summary>
        /// Specifies an array of references to inbound Nat pools of the load balancers. A
        /// scale set can reference inbound nat pools of one public and one internal load
        /// balancer. Multiple scale sets cannot use the same basic sku load balancer.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Sample.API.Models.ISubResource> LoadBalancerInboundNatPools { get => this._loadBalancerInboundNatPools; set => this._loadBalancerInboundNatPools = value; }

        /// <summary>Backing field for <see cref="Primary" /> property.</summary>
        private bool? _primary;

        /// <summary>
        /// Specifies the primary network interface in case the virtual machine has more
        /// than 1 network interface.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public bool? Primary { get => this._primary; set => this._primary = value; }

        /// <summary>Backing field for <see cref="PrivateIPAddressVersion" /> property.</summary>
        private string _privateIPAddressVersion;

        /// <summary>
        /// Available from Api-Version 2017-03-30 onwards, it represents whether the
        /// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
        /// values are: 'IPv4' and 'IPv6'.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string PrivateIPAddressVersion { get => this._privateIPAddressVersion; set => this._privateIPAddressVersion = value; }

        /// <summary>Backing field for <see cref="PublicIPAddressConfiguration" /> property.</summary>
        private Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfiguration _publicIPAddressConfiguration;

        /// <summary>The publicIPAddressConfiguration.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        internal Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfiguration PublicIPAddressConfiguration { get => (this._publicIPAddressConfiguration = this._publicIPAddressConfiguration ?? new Sample.API.Models.VirtualMachineScaleSetPublicIPAddressConfiguration()); set => this._publicIPAddressConfiguration = value; }

        /// <summary>The publicIP address configuration name.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string PublicIPAddressConfigurationName { get => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Name; set => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Name = value ?? null; }

        /// <summary>
        /// Available from Api-Version 2019-07-01 onwards, it represents whether the
        /// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
        /// values are: 'IPv4' and 'IPv6'.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string PublicIPAddressVersion { get => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPAddressVersion; set => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPAddressVersion = value ?? null; }

        /// <summary>Resource Id</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string PublicIPPrefixId { get => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPPrefixId; set => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPPrefixId = value ?? null; }

        /// <summary>Internal Acessors for DnsSettings</summary>
        Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings Sample.API.Models.IVirtualMachineScaleSetIPConfigurationPropertiesInternal.DnsSettings { get => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DnsSettings; set => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DnsSettings = value; }

        /// <summary>Internal Acessors for PublicIPAddressConfiguration</summary>
        Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfiguration Sample.API.Models.IVirtualMachineScaleSetIPConfigurationPropertiesInternal.PublicIPAddressConfiguration { get => (this._publicIPAddressConfiguration = this._publicIPAddressConfiguration ?? new Sample.API.Models.VirtualMachineScaleSetPublicIPAddressConfiguration()); set { {_publicIPAddressConfiguration = value;} } }

        /// <summary>Internal Acessors for PublicIPAddressConfigurationProperties</summary>
        Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationProperties Sample.API.Models.IVirtualMachineScaleSetIPConfigurationPropertiesInternal.PublicIPAddressConfigurationProperties { get => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Properties; set => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Properties = value; }

        /// <summary>Internal Acessors for PublicIPAddressConfigurationSku</summary>
        Sample.API.Models.IPublicIPAddressSku Sample.API.Models.IVirtualMachineScaleSetIPConfigurationPropertiesInternal.PublicIPAddressConfigurationSku { get => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Sku; set => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Sku = value; }

        /// <summary>Internal Acessors for PublicIPPrefix</summary>
        Sample.API.Models.ISubResource Sample.API.Models.IVirtualMachineScaleSetIPConfigurationPropertiesInternal.PublicIPPrefix { get => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPPrefix; set => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPPrefix = value; }

        /// <summary>Internal Acessors for Subnet</summary>
        Sample.API.Models.IApiEntityReference Sample.API.Models.IVirtualMachineScaleSetIPConfigurationPropertiesInternal.Subnet { get => (this._subnet = this._subnet ?? new Sample.API.Models.ApiEntityReference()); set { {_subnet = value;} } }

        /// <summary>Specify public IP sku name</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).SkuName; set => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).SkuName = value ?? null; }

        /// <summary>Specify public IP sku tier</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string SkuTier { get => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).SkuTier; set => ((Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).SkuTier = value ?? null; }

        /// <summary>Backing field for <see cref="Subnet" /> property.</summary>
        private Sample.API.Models.IApiEntityReference _subnet;

        /// <summary>Specifies the identifier of the subnet.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        internal Sample.API.Models.IApiEntityReference Subnet { get => (this._subnet = this._subnet ?? new Sample.API.Models.ApiEntityReference()); set => this._subnet = value; }

        /// <summary>
        /// The ARM resource id in the form of
        /// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string SubnetId { get => ((Sample.API.Models.IApiEntityReferenceInternal)Subnet).Id; set => ((Sample.API.Models.IApiEntityReferenceInternal)Subnet).Id = value ?? null; }

        /// <summary>
        /// Creates an new <see cref="VirtualMachineScaleSetIPConfigurationProperties" /> instance.
        /// </summary>
        public VirtualMachineScaleSetIPConfigurationProperties()
        {

        }
    }
    /// Describes a virtual machine scale set network profile's IP configuration
    /// properties.
    public partial interface IVirtualMachineScaleSetIPConfigurationProperties :
        Sample.API.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies an array of references to backend address pools of application
        /// gateways. A scale set can reference backend address pools of multiple
        /// application gateways. Multiple scale sets cannot use the same application
        /// gateway.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies an array of references to backend address pools of application
        gateways. A scale set can reference backend address pools of multiple
        application gateways. Multiple scale sets cannot use the same application
        gateway.",
        SerializedName = @"applicationGatewayBackendAddressPools",
        PossibleTypes = new [] { typeof(Sample.API.Models.ISubResource) })]
        System.Collections.Generic.List<Sample.API.Models.ISubResource> ApplicationGatewayBackendAddressPools { get; set; }
        /// <summary>Specifies an array of references to application security group.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies an array of references to application security group.",
        SerializedName = @"applicationSecurityGroups",
        PossibleTypes = new [] { typeof(Sample.API.Models.ISubResource) })]
        System.Collections.Generic.List<Sample.API.Models.ISubResource> ApplicationSecurityGroups { get; set; }
        /// <summary>Specify what happens to the public IP when the VM is deleted</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specify what happens to the public IP when the VM is deleted",
        SerializedName = @"deleteOption",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Delete", "Detach")]
        string DeleteOption { get; set; }
        /// <summary>
        /// The Domain name label.The concatenation of the domain name label and vm index
        /// will be the domain name labels of the PublicIPAddress resources that will be
        /// created
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Domain name label.The concatenation of the domain name label and vm index
        will be the domain name labels of the PublicIPAddress resources that will be
        created",
        SerializedName = @"domainNameLabel",
        PossibleTypes = new [] { typeof(string) })]
        string DnsSettingDomainNameLabel { get; set; }
        /// <summary>
        /// The Domain name label scope.The concatenation of the hashed domain name label
        /// that generated according to the policy from domain name label scope and vm
        /// index will be the domain name labels of the PublicIPAddress resources that will
        /// be created
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Domain name label scope.The concatenation of the hashed domain name label
        that generated according to the policy from domain name label scope and vm
        index will be the domain name labels of the PublicIPAddress resources that will
        be created",
        SerializedName = @"domainNameLabelScope",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("TenantReuse", "SubscriptionReuse", "ResourceGroupReuse", "NoReuse")]
        string DnsSettingDomainNameLabelScope { get; set; }
        /// <summary>The list of IP tags associated with the public IP address.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of IP tags associated with the public IP address.",
        SerializedName = @"ipTags",
        PossibleTypes = new [] { typeof(Sample.API.Models.IVirtualMachineScaleSetIPTag) })]
        System.Collections.Generic.List<Sample.API.Models.IVirtualMachineScaleSetIPTag> IPTags { get; set; }
        /// <summary>The idle timeout of the public IP address.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The idle timeout of the public IP address.",
        SerializedName = @"idleTimeoutInMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? IdleTimeoutInMinutes { get; set; }
        /// <summary>
        /// Specifies an array of references to backend address pools of load balancers. A
        /// scale set can reference backend address pools of one public and one internal
        /// load balancer. Multiple scale sets cannot use the same basic sku load balancer.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies an array of references to backend address pools of load balancers. A
        scale set can reference backend address pools of one public and one internal
        load balancer. Multiple scale sets cannot use the same basic sku load balancer.",
        SerializedName = @"loadBalancerBackendAddressPools",
        PossibleTypes = new [] { typeof(Sample.API.Models.ISubResource) })]
        System.Collections.Generic.List<Sample.API.Models.ISubResource> LoadBalancerBackendAddressPools { get; set; }
        /// <summary>
        /// Specifies an array of references to inbound Nat pools of the load balancers. A
        /// scale set can reference inbound nat pools of one public and one internal load
        /// balancer. Multiple scale sets cannot use the same basic sku load balancer.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies an array of references to inbound Nat pools of the load balancers. A
        scale set can reference inbound nat pools of one public and one internal load
        balancer. Multiple scale sets cannot use the same basic sku load balancer.",
        SerializedName = @"loadBalancerInboundNatPools",
        PossibleTypes = new [] { typeof(Sample.API.Models.ISubResource) })]
        System.Collections.Generic.List<Sample.API.Models.ISubResource> LoadBalancerInboundNatPools { get; set; }
        /// <summary>
        /// Specifies the primary network interface in case the virtual machine has more
        /// than 1 network interface.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the primary network interface in case the virtual machine has more
        than 1 network interface.",
        SerializedName = @"primary",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Primary { get; set; }
        /// <summary>
        /// Available from Api-Version 2017-03-30 onwards, it represents whether the
        /// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
        /// values are: 'IPv4' and 'IPv6'.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Available from Api-Version 2017-03-30 onwards, it represents whether the
        specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible
        values are: 'IPv4' and 'IPv6'.",
        SerializedName = @"privateIPAddressVersion",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("IPv4", "IPv6")]
        string PrivateIPAddressVersion { get; set; }
        /// <summary>The publicIP address configuration name.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The publicIP address configuration name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string PublicIPAddressConfigurationName { get; set; }
        /// <summary>
        /// Available from Api-Version 2019-07-01 onwards, it represents whether the
        /// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
        /// values are: 'IPv4' and 'IPv6'.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Available from Api-Version 2019-07-01 onwards, it represents whether the
        specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
        values are: 'IPv4' and 'IPv6'.",
        SerializedName = @"publicIPAddressVersion",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("IPv4", "IPv6")]
        string PublicIPAddressVersion { get; set; }
        /// <summary>Resource Id</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string PublicIPPrefixId { get; set; }
        /// <summary>Specify public IP sku name</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specify public IP sku name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Basic", "Standard")]
        string SkuName { get; set; }
        /// <summary>Specify public IP sku tier</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specify public IP sku tier",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Regional", "Global")]
        string SkuTier { get; set; }
        /// <summary>
        /// The ARM resource id in the form of
        /// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ARM resource id in the form of
        /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetId { get; set; }

    }
    /// Describes a virtual machine scale set network profile's IP configuration
    /// properties.
    internal partial interface IVirtualMachineScaleSetIPConfigurationPropertiesInternal

    {
        /// <summary>
        /// Specifies an array of references to backend address pools of application
        /// gateways. A scale set can reference backend address pools of multiple
        /// application gateways. Multiple scale sets cannot use the same application
        /// gateway.
        /// </summary>
        System.Collections.Generic.List<Sample.API.Models.ISubResource> ApplicationGatewayBackendAddressPools { get; set; }
        /// <summary>Specifies an array of references to application security group.</summary>
        System.Collections.Generic.List<Sample.API.Models.ISubResource> ApplicationSecurityGroups { get; set; }
        /// <summary>Specify what happens to the public IP when the VM is deleted</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Delete", "Detach")]
        string DeleteOption { get; set; }
        /// <summary>
        /// The Domain name label.The concatenation of the domain name label and vm index
        /// will be the domain name labels of the PublicIPAddress resources that will be
        /// created
        /// </summary>
        string DnsSettingDomainNameLabel { get; set; }
        /// <summary>
        /// The Domain name label scope.The concatenation of the hashed domain name label
        /// that generated according to the policy from domain name label scope and vm
        /// index will be the domain name labels of the PublicIPAddress resources that will
        /// be created
        /// </summary>
        [global::Sample.API.PSArgumentCompleterAttribute("TenantReuse", "SubscriptionReuse", "ResourceGroupReuse", "NoReuse")]
        string DnsSettingDomainNameLabelScope { get; set; }
        /// <summary>The dns settings to be applied on the publicIP addresses .</summary>
        Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings DnsSettings { get; set; }
        /// <summary>The list of IP tags associated with the public IP address.</summary>
        System.Collections.Generic.List<Sample.API.Models.IVirtualMachineScaleSetIPTag> IPTags { get; set; }
        /// <summary>The idle timeout of the public IP address.</summary>
        int? IdleTimeoutInMinutes { get; set; }
        /// <summary>
        /// Specifies an array of references to backend address pools of load balancers. A
        /// scale set can reference backend address pools of one public and one internal
        /// load balancer. Multiple scale sets cannot use the same basic sku load balancer.
        /// </summary>
        System.Collections.Generic.List<Sample.API.Models.ISubResource> LoadBalancerBackendAddressPools { get; set; }
        /// <summary>
        /// Specifies an array of references to inbound Nat pools of the load balancers. A
        /// scale set can reference inbound nat pools of one public and one internal load
        /// balancer. Multiple scale sets cannot use the same basic sku load balancer.
        /// </summary>
        System.Collections.Generic.List<Sample.API.Models.ISubResource> LoadBalancerInboundNatPools { get; set; }
        /// <summary>
        /// Specifies the primary network interface in case the virtual machine has more
        /// than 1 network interface.
        /// </summary>
        bool? Primary { get; set; }
        /// <summary>
        /// Available from Api-Version 2017-03-30 onwards, it represents whether the
        /// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
        /// values are: 'IPv4' and 'IPv6'.
        /// </summary>
        [global::Sample.API.PSArgumentCompleterAttribute("IPv4", "IPv6")]
        string PrivateIPAddressVersion { get; set; }
        /// <summary>The publicIPAddressConfiguration.</summary>
        Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfiguration PublicIPAddressConfiguration { get; set; }
        /// <summary>The publicIP address configuration name.</summary>
        string PublicIPAddressConfigurationName { get; set; }
        /// <summary>
        /// Describes a virtual machines scale set IP Configuration's PublicIPAddress
        /// configuration
        /// </summary>
        Sample.API.Models.IVirtualMachineScaleSetPublicIPAddressConfigurationProperties PublicIPAddressConfigurationProperties { get; set; }
        /// <summary>
        /// Describes the public IP Sku. It can only be set with OrchestrationMode as
        /// Flexible.
        /// </summary>
        Sample.API.Models.IPublicIPAddressSku PublicIPAddressConfigurationSku { get; set; }
        /// <summary>
        /// Available from Api-Version 2019-07-01 onwards, it represents whether the
        /// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
        /// values are: 'IPv4' and 'IPv6'.
        /// </summary>
        [global::Sample.API.PSArgumentCompleterAttribute("IPv4", "IPv6")]
        string PublicIPAddressVersion { get; set; }
        /// <summary>The PublicIPPrefix from which to allocate publicIP addresses.</summary>
        Sample.API.Models.ISubResource PublicIPPrefix { get; set; }
        /// <summary>Resource Id</summary>
        string PublicIPPrefixId { get; set; }
        /// <summary>Specify public IP sku name</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Basic", "Standard")]
        string SkuName { get; set; }
        /// <summary>Specify public IP sku tier</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Regional", "Global")]
        string SkuTier { get; set; }
        /// <summary>Specifies the identifier of the subnet.</summary>
        Sample.API.Models.IApiEntityReference Subnet { get; set; }
        /// <summary>
        /// The ARM resource id in the form of
        /// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
        /// </summary>
        string SubnetId { get; set; }

    }
}